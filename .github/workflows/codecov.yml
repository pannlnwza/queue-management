name: Run tests and upload coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage

      - name: Copy sample.env to .env
        run: |
          cp sample.env .env

      - name: Set TEST environment variable
        run: |
          echo "TEST=True" >> .env
          echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/mydatabase" >> .env

      - name: Make migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests and collect coverage
        run: | 
          coverage run manage.py test

      - name: Generate coverage report
        run: coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-coverage
          fail_ci_if_error: true
          verbose: true
